-- EMPLOYEE Table
Create schema corporate_workforce_management;
CREATE TABLE EMPLOYEE(
    EID INT PRIMARY KEY,
    NAME VARCHAR2(20),
    ADDRESS VARCHAR2(20),
    GENDER CHAR(1) CHECK(GENDER = 'M' OR GENDER = 'F'),
    SALARY NUMBER(6),
    SUPEREID INT,
    FOREIGN KEY (SUPEREID) REFERENCES EMPLOYEE(EID),
    DNO NUMBER
);

-- DEPARTMENT Table
CREATE TABLE DEPARTMENT(
    DNUM NUMBER(5) PRIMARY KEY,
    DNAME VARCHAR2(10),
    DMGR_ID INT,
    FOREIGN KEY(DMGR_ID) REFERENCES EMPLOYEE(EID),
    MGR_START_DATE DATE
);

-- Update EMPLOYEE Table to add foreign key constraint for DNO
ALTER TABLE EMPLOYEE ADD CONSTRAINT FK FOREIGN KEY(DNO) REFERENCES DEPARTMENT(DNUM);

-- DLOCATION Table
CREATE TABLE DLOCATION(
    DNO INT,
    FOREIGN KEY(DNO) REFERENCES DEPARTMENT(DNUM),
    LOCATION VARCHAR2(10),
    PRIMARY KEY(DNO, LOCATION)
);

-- PROJECT Table
CREATE TABLE PROJECT(
    PNUM NUMBER(2) PRIMARY KEY,
    PNAME VARCHAR2(20),
    PLOCATION VARCHAR2(20),
    DNO NUMBER REFERENCES DEPARTMENT(DNUM)
);

-- WORKSON Table
CREATE TABLE WORKSON(
    EID NUMBER(5) REFERENCES EMPLOYEE(EID),
    PNO NUMBER(2) REFERENCES PROJECT(PNUM),
    HOURS NUMBER(5,2),
    PRIMARY KEY(EID, PNO)
);

-- DEPENDENT Table
CREATE TABLE DEPENDENT(
    EMP_ID INT,
    DEPENDENT_NAME VARCHAR2(12),
    GENDER VARCHAR2(5),
    BDATE DATE,
    RELATIONSHIP VARCHAR(12),
    PRIMARY KEY (EMP_ID, DEPENDENT_NAME),
    FOREIGN KEY(EMP_ID) REFERENCES EMPLOYEE(EID) ON DELETE CASCADE
);

-- Sample Data Inserts

-- Insert into EMPLOYEE Table
INSERT INTO EMPLOYEE VALUES(1,'RAHUL','MANGALURU','M',35000,1,NULL);
INSERT INTO EMPLOYEE VALUES(2,'SAHANA','MANGALURU','F',35000,1,NULL);
INSERT INTO EMPLOYEE VALUES(3,'SAGAR','BENGALURU','M',35000,1,NULL);
INSERT INTO EMPLOYEE VALUES(4,'SAGARIK','MANGALURU','M',35000,1,NULL);
INSERT INTO EMPLOYEE VALUES(5,'SAJAAN','MYSORE','M',600000,1,NULL);

-- Insert into DEPARTMENT Table
INSERT INTO DEPARTMENT VALUES(1,'CSE',1,'2-Nov-2007');
INSERT INTO DEPARTMENT VALUES(2,'IOT',2,'2-Nov-2007');
INSERT INTO DEPARTMENT VALUES(3,'Account',2,'2-Nov-2017');
INSERT INTO DEPARTMENT VALUES(4,'ISE',1,'2-Nov-2000');
INSERT INTO DEPARTMENT VALUES(5,'Finance',1,'3-Nov-2001');

-- Update EMPLOYEE Table for DNO
UPDATE EMPLOYEE SET DNO = 4 WHERE EID = 1;
UPDATE EMPLOYEE SET DNO = 1 WHERE EID = 2;
UPDATE EMPLOYEE SET DNO = 3 WHERE EID = 3;
UPDATE EMPLOYEE SET DNO = 3 WHERE EID = 4;
UPDATE EMPLOYEE SET DNO = 3 WHERE EID = 5;

-- Insert into DLOCATION Table
INSERT INTO DLOCATION VALUES(1,'MANGALURU');
INSERT INTO DLOCATION VALUES(1,'MYSORE');
INSERT INTO DLOCATION VALUES(2,'MANGALURU');
INSERT INTO DLOCATION VALUES(3,'BENGALURU');
INSERT INTO DLOCATION VALUES(4,'MANGALURU');
INSERT INTO DLOCATION VALUES(5,'MANGALURU');

-- Insert into PROJECT Table
INSERT INTO PROJECT VALUES(1,'IOT','MANGALURU',1);
INSERT INTO PROJECT VALUES(2,'DATA MINING','MANGALURU',1);
INSERT INTO PROJECT VALUES(3,'CC','HUBLI',3);
INSERT INTO PROJECT VALUES(4,'IMAGE PROCESSING','MANGALURU',4);
INSERT INTO PROJECT VALUES(5,'RESEARCH','MANGALURU',5);

-- Insert into WORKSON Table
INSERT INTO WORKSON VALUES(1, 1, 20.5);
INSERT INTO WORKSON VALUES(2, 2, 35.0);
INSERT INTO WORKSON VALUES(3, 3, 15.0);
INSERT INTO WORKSON VALUES(4, 4, 25.0);
INSERT INTO WORKSON VALUES(5, 5, 40.0);

-- Insert into DEPENDENT Table
INSERT INTO DEPENDENT VALUES(1, 'RAVI', 'M', TO_DATE('2005-01-15', 'YYYY-MM-DD'), 'SON');
INSERT INTO DEPENDENT VALUES(2, 'REKHA', 'F', TO_DATE('2006-03-12', 'YYYY-MM-DD'), 'DAUGHTER');
INSERT INTO DEPENDENT VALUES(3, 'ANITA', 'F', TO_DATE('1980-07-20', 'YYYY-MM-DD'), 'WIFE');
INSERT INTO DEPENDENT VALUES(4, 'VIJAY', 'M', TO_DATE('2009-10-05', 'YYYY-MM-DD'), 'SON');
INSERT INTO DEPENDENT VALUES(5, 'PRIYA', 'F', TO_DATE('1982-11-25', 'YYYY-MM-DD'), 'WIFE');

-- EMPLOYEE_DNO_CHECK_TRIGGER
USE corporate_workforce_management;

DELIMITER $$

CREATE TRIGGER EMPLOYEE_DNO_CHECK_TRIGGER_INSERT
BEFORE INSERT 
ON EMPLOYEE
FOR EACH ROW
BEGIN
    IF NEW.DNO NOT IN (SELECT DNUM FROM DEPARTMENT) THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Invalid DNO. Department does not exist.';
    END IF;
END$$

CREATE TRIGGER EMPLOYEE_DNO_CHECK_TRIGGER_UPDATE
BEFORE UPDATE 
ON EMPLOYEE
FOR EACH ROW
BEGIN
    IF NEW.DNO NOT IN (SELECT DNUM FROM DEPARTMENT) THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Invalid DNO. Department does not exist.';
    END IF;
END$$

DELIMITER ;

-- DEPARTMENT_DMGR_ID_CHECK_TRIGGER
USE corporate_workforce_management; 

DELIMITER $$

CREATE TRIGGER DEPARTMENT_DMGR_ID_CHECK_TRIGGER_INSERT
BEFORE INSERT 
ON DEPARTMENT
FOR EACH ROW
BEGIN
    IF NEW.DMGR_ID NOT IN (SELECT EID FROM EMPLOYEE) THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Invalid DMGR_ID. Employee does not exist.';
    END IF;
END$$

CREATE TRIGGER DEPARTMENT_DMGR_ID_CHECK_TRIGGER_UPDATE
BEFORE UPDATE 
ON DEPARTMENT
FOR EACH ROW
BEGIN
    IF NEW.DMGR_ID NOT IN (SELECT EID FROM EMPLOYEE) THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Invalid DMGR_ID. Employee does not exist.';
    END IF;
END$$

DELIMITER ;